<resources>

<!-- Base application theme.
original    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
    →    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">　アクションバーを表示しない。
-->
    <style name="AppTheme" parent="@style/Theme.AppCompat.Light.NoActionBar">
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>

<!--
＊ToolBarのスタイルを設定する。
-->
    <!--toolbar自体の設定-->
    <style name="ToolbarTheme" parent="@android:style/Theme.DeviceDefault.Light.NoActionBar">
        <!--toolbarテキストの設定-->
        <item name="android:textColorPrimary">@color/white</item>
        <!-- ToolBarのOverflowメニューのテキスト -->
        <item name="android:textSize">20sp</item>
        <item name="android:textColor">@color/black</item>
        <!-- ToolBarのoverflowメニューのアイコンを白にする -->
        <item name="android:textColorSecondary">@color/white</item>
    </style>

<!--
＊AlertDialogのスタイルを設定する。
    AlertDialog.Builderの、第二引数 int themeResIdにテーマを指定することでカスタムのスタイルの適用することができる。
    <style name="AlertDialog_Theme" parent="Theme.AppCompat.Light.Dialog">

    </style>
-->
<!--
Custome Themeという名のテーマを追加してみる。ペアレントはAppTheme。
未試験・・・。だめだ、、、
    <style name="CustomTehme" parent="@style/AppTheme">
        <item name="android:textColor">#ff880000</item>
        <item name="android:textSize">25dp</item>
        <item name="colorPrimary">@android:color/holo_blue_light</item>
        <item name="android:textColorPrimaryInverse">@color/colorPrimaryDark</item>
    </style>
-->

</resources>
